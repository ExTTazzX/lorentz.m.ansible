---
- hosts: 192.168.143.37
  become: yes
  become_user: root
  become_method: sudo

  #INSTALLATION DES MISES A JOUR

  tasks:
  - name: Installation des paquets communs à tous les serveurs
    apt:
      update_cache: yes
      state: latest
      name: ['glances', 'pwgen', 'sudo', 'tar', 'unzip', 'vim', 'whois']

  
  #INSTALLATION 

  - name: Installation server LAMP
    apt:
      update_cache: yes
      state: latest
      name: ['apache2', 'mysql-server', 'php']


  #CONFIG APACHE2

  - name: Creation document root
    file:
      path: "/var/www/{{ http_host }}"
      state: directory
      owner: "{{ app_user }}"
      mode: '0755'

  - name: Set up Apache virtualhost
    template:
      src: "files/apache.conf.j2"
      dest: "/etc/apache2/sites-available/{{ http_conf }}"
    notify: Reload Apache

  - name: Enable new site
    shell: /usr/sbin/a2ensite {{ http_conf }}
    notify: Reload Apache

  - name: Disable default Apache site
    shell: /usr/sbin/a2dissite 000-default.conf
    when: disable_default
    notify: Reload Apache


  # MySQL Configuration

  - name: Sets the root password
    mysql_user:
      name: root
      password: "{{ mysql_root_password }}"
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: Removes all anonymous user accounts
    mysql_user:
      name: ''
      host_all: yes
      state: absent
      login_user: root
      login_password: "{{ mysql_root_password }}"

  - name: Removes the MySQL test database
    mysql_db:
      name: test
      state: absent
      login_user: root
      login_password: "{{ mysql_root_password }}"


  #WordPress Configuration

  - name: Téléchargement et unzip 
    unarchive:
      src: https://wordpress.org/latest.tar.gz
      dest: "/var/www/{{ http_host }}"
      remote_src: yes
      creates: "/var/www/{{ http_host }}/wordpress"
    tags: [ wordpress ]

  - name: Set ownership
    file:
      path: "/var/www/{{ http_host }}"
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
    tags: [ wordpress ]

  - name: Set permissions for directories
    shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
    tags: [ wordpress ]

  - name: Set permissions for files
    shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
    tags: [ wordpress ]

  - name: Set up wp-config
    template:
      src: "files/wp-config.php.j2"
      dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
    tags: [ wordpress ]

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted


  # UFW Configuration (FireWall)

  - name: "UFW - Allow HTTP on port {{ http_port }}"
    ufw:
      rule: allow
      port: "{{ http_port }}"
      proto: tcp


  # Installation + Config Fail2Ban

  - name: Installation + Config Fail2Ban
    apt: name=fail2ban update_cache=yes state=latest
        

  # Installation + Config shhd

  - name: Allow only technique user to login
      lineinfile: dest=/etc/ssh/sshd_config regexp="^AllowUsers" line="AllowUsers technique" state=present
      notify:
  - restart ssh	


  # Ajout groupe "sshusers" + mettre user "technique" dedans 

  - name: Create a new group
    win_group:
      name: sshusers
      description: groupe autorise ssh
      state: present

  - name: regarder si le groupe "sshusers" existe
      ansible.builtin.group:
      name: sshusers
      state: present

  - name: Ajout user "technique" dans le groupe "sshusers"
      ansible.builtin.user:
      name: technique
      shell: /bin/bash
      groups: sshusers
      append: yes


  # Ajout logiciels de tâche d'administration 

  - name: Installation gedit 
    community.general.flatpak:
      name: https://git.gnome.org/browse/gnome-apps-nightly/plain/gedit.flatpakref
      state: present
  
  - name: Installation generateur mdp
    apt:
      update_cache: yes
      state: latest
      name: pwgen


